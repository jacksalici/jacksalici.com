---
type Props = {
    text?: string;
    hiddenText?: string;
    link?: string;
    dark?: Boolean;
    external?: Boolean;
    ariaLabel?: string;
    span?: string;
};

const { text, hiddenText, link, dark = false, external = false, ariaLabel = "", span = "col-span-1 row-span-1" } = Astro.props;
---
<a class:list={[span + " rounded hover:bg-yellow font-display uppercase flex flex-col justify-between group transition-all", {"bg-secondary text-primary-content": !dark, "bg-primary-content text-primary hover:text-primary-content": dark} ]} href={link} target={external === true ? '_blank' : '_self'} rel={external === true ? 'noreferrer' : undefined} aria-label={ariaLabel}>
  
    {!hiddenText && <p class="p-3 md:p-4">
      {text}
    </p>
    }

    {hiddenText && 
    <p class:list={["p-3 md:p-4 group-hover:hidden"]}>
      {text}
    </p>
    <p class:list={["p-3 md:p-4 hidden group-hover:inline"]}>
      {hiddenText}
    </p>
    }


    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" class:list={["w-6 ml-auto mr-4 mb-4 transition-all group-hover:translate-x-1", {"fill-primary group-hover:fill-primary-content": dark, "fill-primary-content": !dark}]}>
      <path d="M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z"></path>
    </svg>
  </a>



